#!/usr/bin/expect

# Arguments passed to the script
set PASS [lindex $argv 0]
set USER [lindex $argv 1]
set HOST [lindex $argv 2]
set REMOTEDIR [lindex $argv 3]
set TMPDIR [lindex $argv 4]
set YEAR [lindex $argv 5]

# Read the password from the file
set PASSWORD [exec cat $PASS]

# Set a longer timeout to accommodate large file transfers
set timeout 600

proc sftp_session {USER HOST PASSWORD REMOTEDIR TMPDIR YEAR} {
    spawn sftp $USER@$HOST

    expect {
        "password:" {
            send "$PASSWORD\r"
            exp_continue
        }
        "Permission denied, please try again." {
            puts "Permission denied, retrying..."
            return 1
        }
        "sftp>" {
            # Navigate to the base directory and download all files for the year
            send "lcd $LOCALDIR\r"
            expect "sftp>"
            send "cd $REMOTEDIR/calculations/$YEAR\r"
            expect "sftp>"
            send "mget -r *\r"
            expect "sftp>"
            send "bye\r"
            expect eof
        }
    }
    return 0
}

# Retry logic for sftp session
set retry_count 0
set max_retries 5
set success 0

while {$retry_count < $max_retries} {
    set result [sftp_session $USER $HOST $PASSWORD $REMOTEDIR $LOCALDIR $YEAR]
    if {$result == 0} {
        set success 1
        break
    }
    incr retry_count
    puts "Retry attempt: $retry_count"
    sleep 5
}

if {$success == 0} {
    puts "Failed to login after $max_retries attempts."
    exit 1
}

# Merge files locally
exec sh -c {
    cd $LOCALDIR
    echo -e "upc\tmean_price\ttotal_sold\tsize1_amount\tsize1_units\tprice_per_unit\tproduct_group\tproduct_code" > merged_${YEAR}.csv
    for file in ${TMPDIR}/*/*.csv; do
        product_group=$(basename $(dirname $file) | cut -d'_' -f1)
        product_code=$(basename $file .csv | cut -d'_' -f1)
        tail -n +2 $file | awk -v pg=$product_group -v pc=$product_code '{print $0"\t"pg"\t"pc}' >> merged_${YEAR}.csv
    done
}